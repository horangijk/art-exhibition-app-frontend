{"ast":null,"code":"// mapDispatchToProps\n// EXHIBITIONS ----------------------------------------\nvar loadExhibitions = function loadExhibitions(exhibitions) {\n  return {\n    type: \"LOAD_EXHIBITIONS\",\n    payload: exhibitions\n  };\n};\n\nexport var getExhibitions = function getExhibitions() {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/exhibitions').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(loadExhibitions(data));\n    }).catch(console.error);\n  };\n};\n\nvar getExhibitionInfo = function getExhibitionInfo(exhibObj) {\n  return {\n    type: \"GET_EXHIB_INFO\",\n    payload: exhibObj\n  };\n};\n\nexport function showExhibitionInfo(exhibObj) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3000/api/v1/exhibitions/\".concat(exhibObj.id)).then(function (res) {\n      return res.json();\n    }).then(function (exhibition) {\n      dispatch(getExhibitionInfo(exhibition));\n    });\n  };\n}\n\nvar saveExhibition = function saveExhibition(obj) {\n  return {\n    type: \"SAVE_EXHIB\",\n    payload: obj\n  };\n};\n\nexport function postToSavedExhibition(obj) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/saved_exhibitions', {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        saved_exhibition: obj\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(saveExhibition(data));\n    }).catch(console.error);\n  };\n}\n\nvar loadSavedExhibitions = function loadSavedExhibitions(exhibitions) {\n  return {\n    type: \"LOAD_SAVED_EXHIBITIONS\",\n    payload: exhibitions\n  };\n};\n\nexport function getSavedExhibitions(exhibitions) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/saved_exhibitions').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(loadSavedExhibitions(data));\n    });\n  };\n}\n\nvar createImpression = function createImpression(impressionObj) {\n  return {\n    type: \"CREATE_IMPRESSION\",\n    payload: impressionObj\n  };\n};\n\nexport function postToExhibitionImpressions(impressionObj) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/impressions', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        impression: impressionObj\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (impression) {\n      return dispatch(createImpression(impression));\n    });\n  };\n}\n\nvar loadAllImpressions = function loadAllImpressions(impressions) {\n  return {\n    type: \"LOAD_IMPRESSIONS\",\n    payload: impressions\n  };\n};\n\nexport function getImpressions(impressions) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/impressions').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(loadAllImpressions(data));\n    });\n  };\n}\n\nvar removeSavedExhibition = function removeSavedExhibition(savedExObj) {\n  return {\n    type: \"REMOVE_SAVED_EXHIBITION\",\n    payload: savedExObj\n  };\n};\n\nexport function deleteSavedExhibition(savedExObj) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3000/api/v1/saved_exhibitions/\".concat(savedExObj.id), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(removeSavedExhibition(data));\n    });\n  };\n} // -----------------------------------------------------\n// USERS ----------------------------------------\n\nvar signInUser = function signInUser(user) {\n  return {\n    type: \"SIGN_IN_USER\",\n    payload: user\n  };\n};\n\nexport function getCurrentUser(userObj) {\n  return function (dispatch) {\n    // let token = localStorage.token\n    return fetch('http://localhost:3000/api/v1/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: userObj\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      localStorage.setItem(\"token\", data.jwt);\n      dispatch(signInUser(data.user));\n    }).catch(console.error);\n  };\n}\n\nvar addUser = function addUser(user) {\n  return {\n    type: \"ADD_USER\",\n    payload: user\n  };\n};\n\nexport function createUser(userObj) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/users', {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: userObj\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      localStorage.setItem(\"token\", user.jwt);\n      dispatch(addUser(user));\n      dispatch(signInUser(user.user));\n    }).catch(console.error);\n  };\n}\n\nvar showUserProfile = function showUserProfile(user) {\n  return {\n    type: \"SHOW_USER_PROFILE\",\n    payload: user\n  };\n};\n\nexport var getCurrentUserProfile = function getCurrentUserProfile(userObj) {\n  return function (dispatch) {\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(localStorage.token)\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        // console.log(\"data:\", data);\n        // dispatch(showUserProfile(data.user.email))\n        dispatch(showUserProfile(data.user));\n      });\n    }\n  };\n};\n\nvar loadUsers = function loadUsers(users) {\n  return {\n    type: \"LOAD_USERS\",\n    payload: users\n  };\n};\n\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/users').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(loadUsers(data));\n    }).catch(console.error);\n  };\n};\n\nvar removeLoggedInUser = function removeLoggedInUser() {\n  return {\n    type: \"LOG_OUT_USER\",\n    payload: {}\n  };\n};\n\nexport function logOutUser() {\n  return function (dispatch) {\n    dispatch(removeLoggedInUser());\n  };\n}","map":{"version":3,"sources":["/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/src/Redux/actions.js"],"names":["loadExhibitions","exhibitions","type","payload","getExhibitions","dispatch","fetch","then","res","json","data","catch","console","error","getExhibitionInfo","exhibObj","showExhibitionInfo","id","exhibition","saveExhibition","obj","postToSavedExhibition","method","headers","body","JSON","stringify","saved_exhibition","loadSavedExhibitions","getSavedExhibitions","createImpression","impressionObj","postToExhibitionImpressions","impression","loadAllImpressions","impressions","getImpressions","removeSavedExhibition","savedExObj","deleteSavedExhibition","signInUser","user","getCurrentUser","userObj","Accept","localStorage","setItem","jwt","addUser","createUser","showUserProfile","getCurrentUserProfile","token","loadUsers","users","getUsers","removeLoggedInUser","logOutUser"],"mappings":"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","sourcesContent":["// mapDispatchToProps\n\n// EXHIBITIONS ----------------------------------------\nconst loadExhibitions = (exhibitions) => ({\n  type: \"LOAD_EXHIBITIONS\",\n  payload: exhibitions\n})\n\nexport const getExhibitions = () => dispatch => {\n  return fetch('http://localhost:3000/api/v1/exhibitions')\n    .then(res => res.json())\n    .then(data => dispatch(loadExhibitions(data)))\n    .catch(console.error)\n}\n\n\nconst getExhibitionInfo = (exhibObj) => ({\n  type: \"GET_EXHIB_INFO\",\n  payload: exhibObj\n})\n\nexport function showExhibitionInfo(exhibObj) {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/exhibitions/${exhibObj.id}`)\n      .then(res => res.json())\n      .then(exhibition => {\n        dispatch(getExhibitionInfo(exhibition))\n      })\n  }\n}\n\n\nconst saveExhibition = (obj) => ({\n  type: \"SAVE_EXHIB\",\n  payload: obj\n})\n\nexport function postToSavedExhibition(obj) {\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/saved_exhibitions', {\n      method: \"POST\",\n      headers: {\n        \"Accept\" : \"application/json\",\n        \"Content-Type\" : \"application/json\"\n      },\n      body: JSON.stringify({saved_exhibition: obj})\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(saveExhibition(data))\n      })\n      .catch(console.error)\n  }\n}\n\n\nconst loadSavedExhibitions = (exhibitions) => ({\n  type: \"LOAD_SAVED_EXHIBITIONS\",\n  payload: exhibitions\n})\n\nexport function getSavedExhibitions(exhibitions) {\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/saved_exhibitions')\n      .then(res => res.json())\n      .then(data => {\n        dispatch(loadSavedExhibitions(data))\n      })\n  }\n}\n\n\nconst createImpression = (impressionObj) => ({\n  type: \"CREATE_IMPRESSION\",\n  payload: impressionObj\n})\n\nexport function postToExhibitionImpressions(impressionObj) {\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/impressions', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify({impression: impressionObj})\n    })\n      .then(res => res.json())\n      .then(impression => dispatch(createImpression(impression)))\n  }\n}\n\nconst loadAllImpressions = (impressions) => ({\n  type: \"LOAD_IMPRESSIONS\",\n  payload: impressions\n})\n\nexport function getImpressions(impressions) {\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/impressions')\n      .then(res => res.json())\n      .then(data => dispatch(loadAllImpressions(data)))\n  }\n}\n\n\nconst removeSavedExhibition = (savedExObj) => ({\n  type: \"REMOVE_SAVED_EXHIBITION\",\n  payload: savedExObj\n})\n\nexport function deleteSavedExhibition(savedExObj) {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/saved_exhibitions/${savedExObj.id}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(removeSavedExhibition(data))\n      })\n  }\n}\n// -----------------------------------------------------\n\n\n\n// USERS ----------------------------------------\nconst signInUser = (user) => ({\n  type: \"SIGN_IN_USER\",\n  payload: user\n})\n\nexport function getCurrentUser(userObj) {\n  return (dispatch) => {\n    // let token = localStorage.token\n    return fetch('http://localhost:3000/api/v1/login',{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n\n      },\n      body: JSON.stringify({user: userObj})\n    })\n    .then(res => res.json())\n    .then(data => {\n      localStorage.setItem(\"token\", data.jwt);\n      dispatch(signInUser(data.user));\n\n    })\n    .catch(console.error)\n  }\n}\n\n\nconst addUser = (user) => ({\n  type: \"ADD_USER\",\n  payload: user\n})\n\nexport function createUser(userObj) {\n\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/users',{\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({user: userObj})\n    })\n      .then(res => res.json())\n      .then(user => {\n        localStorage.setItem(\"token\", user.jwt);\n        dispatch(addUser(user));\n        dispatch(signInUser(user.user));\n      })\n      .catch(console.error)\n  }\n}\n\n\nconst showUserProfile = (user) => ({\n  type: \"SHOW_USER_PROFILE\",\n  payload: user\n})\n\nexport const getCurrentUserProfile = userObj => {\n  return (dispatch) => {\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          \"Accept\" : \"application/json\",\n          \"Content-Type\" : \"application/json\",\n          \"Authorization\" : `Bearer ${localStorage.token}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        // console.log(\"data:\", data);\n        // dispatch(showUserProfile(data.user.email))\n        dispatch(showUserProfile(data.user));\n      })\n    }\n  }\n}\n\n\nconst loadUsers = (users) => ({\n  type: \"LOAD_USERS\",\n  payload: users\n})\n\nexport const getUsers = () => dispatch => {\n  return fetch('http://localhost:3000/api/v1/users')\n    .then(res => res.json())\n    .then(data => dispatch(loadUsers(data)))\n    .catch(console.error)\n}\n\n\nconst removeLoggedInUser = () => ({\n  type: \"LOG_OUT_USER\",\n  payload: {}\n})\n\nexport function logOutUser() {\n  return (dispatch) => {\n    dispatch(removeLoggedInUser())\n  }\n}\n"]},"metadata":{},"sourceType":"module"}