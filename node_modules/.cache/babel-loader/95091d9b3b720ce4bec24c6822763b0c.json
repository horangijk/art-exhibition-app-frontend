{"ast":null,"code":"import _classCallCheck from \"/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/src/Components/ExhibitionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { showExhibitionInfo as _showExhibitionInfo } from '../Redux/actions.js'; // import { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n// import ExhibitionProfile from '../Containers/ExhibitionProfile'\n\nimport '../App.css';\n\nvar ExhibitionCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExhibitionCard, _Component);\n\n  function ExhibitionCard() {\n    _classCallCheck(this, ExhibitionCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExhibitionCard).apply(this, arguments));\n  }\n\n  _createClass(ExhibitionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var exhibitionName = this.props.exhibition.name.split(' ').map(function (str) {\n        if (str !== \"Exhibition\") {\n          return str + \" \";\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"card-container\",\n        onClick: function onClick() {\n          return _this.props.showExhibitionInfo(_this.props.exhibition);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"card-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, exhibitionName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"card-location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Location: \", this.props.exhibition.venue_area)), React.createElement(\"div\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"card-days-remaining\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Days Remaining: \", this.props.exhibition.days_remaining)));\n    }\n  }]);\n\n  return ExhibitionCard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedExhibition: state.selectedExhibition\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    showExhibitionInfo: function showExhibitionInfo(exhibition) {\n      return dispatch(_showExhibitionInfo(exhibition));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExhibitionCard);","map":{"version":3,"sources":["/Users/jisung/Documents/ACCESS LABS/art-exhibition-app-frontend/src/Components/ExhibitionCard.js"],"names":["React","Component","connect","showExhibitionInfo","ExhibitionCard","exhibitionName","props","exhibition","name","split","map","str","venue_area","days_remaining","mapStateToProps","state","selectedExhibition","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAkB,IAAlBA,mBAAT,QAAmC,qBAAnC,C,CACA;AACA;;AACA,OAAO,YAAP;;IAGMC,c;;;;;;;;;;;;;6BACK;AAAA;;AAEP,UAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsCC,GAAtC,CAA0C,UAAAC,GAAG,EAAI;AACpE,YAAIA,GAAG,KAAK,YAAZ,EAA0B;AACxB,iBAAOA,GAAG,GAAG,GAAb;AACD;AACF,OAJoB,CAArB;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACL,KAAL,CAAWH,kBAAX,CAA8B,KAAI,CAACG,KAAL,CAAWC,UAAzC,CAAN;AAAA,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BF,cAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAyC,KAAKC,KAAL,CAAWC,UAAX,CAAsBK,UAA/D,CAHF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqD,KAAKN,KAAL,CAAWC,UAAX,CAAsBM,cAA3E,CADF,CANF,CADF;AAYD;;;;EArB0BZ,S;;AAyB7B,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,kBAAkB,EAAED,KAAK,CAACC;AADrB,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLf,IAAAA,kBAAkB,EAAE,4BAACI,UAAD;AAAA,aAAgBW,QAAQ,CAACf,mBAAkB,CAACI,UAAD,CAAnB,CAAxB;AAAA;AADf,GAAP;AAGD,CAJD;;AAQA,eAAeL,OAAO,CAAEY,eAAF,EAAmBG,kBAAnB,CAAP,CAA+Cb,cAA/C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { showExhibitionInfo } from '../Redux/actions.js'\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n// import ExhibitionProfile from '../Containers/ExhibitionProfile'\nimport '../App.css';\n\n\nclass ExhibitionCard extends Component {\n  render() {\n\n    let exhibitionName = this.props.exhibition.name.split(' ').map(str => {\n      if (str !== \"Exhibition\") {\n        return str + \" \"\n      }\n    })\n\n    return (\n      <div className='card-container' onClick={() => this.props.showExhibitionInfo(this.props.exhibition)}>\n        <div>\n          <h3 className='card-name'>{exhibitionName}</h3>\n          <br/>\n          <h3 className='card-location'>Location: {this.props.exhibition.venue_area}</h3>\n        </div>\n        <div className='footer'>\n          <h3 className='card-days-remaining'>Days Remaining: {this.props.exhibition.days_remaining}</h3>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedExhibition: state.selectedExhibition\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showExhibitionInfo: (exhibition) => dispatch(showExhibitionInfo(exhibition))\n  }\n}\n\n\n\nexport default connect( mapStateToProps, mapDispatchToProps )(ExhibitionCard)\n"]},"metadata":{},"sourceType":"module"}